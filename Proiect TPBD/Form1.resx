<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="aNGAJATBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>116, 17</value>
  </metadata>
  <metadata name="aNGAJATBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>116, 17</value>
  </metadata>
  <metadata name="dataSet1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="dataSet1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="aNGAJATTableAdapter.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>297, 17</value>
  </metadata>
  <metadata name="vARIABILEBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>572, 17</value>
  </metadata>
  <metadata name="dataSet2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>473, 17</value>
  </metadata>
  <metadata name="dataSet2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>473, 17</value>
  </metadata>
  <metadata name="vARIABILETableAdapter.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>757, 17</value>
  </metadata>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>Ghidul Utilizatorului pentru Aplicația Windows Forms
Introducere:
Această aplicație este concepută pentru gestionarea înregistrărilor de angajați și generarea diferitelor rapoarte legate de salariile angajaților și alte variabile.

Cum să Începeți:
Deschiderea Aplicației:

Dublu clic pe pictograma aplicației pentru a o lansa.

Navigarea Interfeței:

Interfața constă în mai multe câmpuri de intrare, butoane și un tabel de date.
Câmpurile de intrare sunt furnizate pentru căutarea angajaților, introducerea unor noi înregistrări de angajați și gestionarea variabilelor.
Butoanele sunt disponibile pentru a efectua acțiuni precum căutare, inserare, ștergere, generare de rapoarte și altele.
Tabelul de date afișează înregistrările angajaților și informațiile despre variabile.

Căutarea Angajaților:

Căutare după Funcție:

Introduceți funcția angajatului în câmpul "Functie".
Faceți clic pe butonul "Cautare Functie" pentru a căuta angajați cu funcția specificată.
Rezultatele vor fi afișate în tabelul de date.

Căutare după Nume și Prenume:

Introduceți numele și prenumele angajatului în câmpurile corespunzătoare.
Faceți clic pe butonul "Cautare" pentru a căuta angajați cu numele și prenumele specificate.
Rezultatele vor fi afișate în tabelul de date.

Gestionarea Înregistrărilor Angajaților:

Introducerea unor Noi Înregistrări:

Completați toate câmpurile obligatorii, inclusiv numele, prenumele, funcția, detaliile salariului, etc.
Faceți clic pe butonul "Inserare" pentru a adăuga noua înregistrare de angajat.
Înregistrarea va fi adăugată în baza de date, iar tabelul de date va fi actualizat în consecință.

Editarea Înregistrărilor:

Faceți clic pe o celulă în tabelul de date pentru a edita înregistrarea corespunzătoare.
Modificați valorile după cum este necesar.
Modificările vor fi salvate automat la ieșirea din celulă.

Ștergerea Înregistrărilor:

Selectați una sau mai multe rânduri în tabelul de date făcând clic pe ele.
Faceți clic pe butonul "Sterge" pentru a șterge înregistrările selectate.
Va apărea o fereastră de confirmare înainte de ștergere.

Generarea Rapoartelor:

Generarea Declarațiilor de Salariu:

Faceți clic pe butonul "Fluturasi" pentru a genera declarații de salariu pentru angajați.
Dacă sunt selectați angajați specifici în tabelul de date, vor fi generate rapoarte doar pentru acei angajați.
În caz contrar, vor fi generate rapoarte pentru toți angajații.
Vizualizarea Rapoartelor:

Rapoartele generate vor fi afișate în vizualizatorul de rapoarte Crystal.

Gestionarea Setărilor Aplicației:

Gestionarea Variabilelor:

Tab-ul "Variabile" vă permite să vizualizați și să modificați variabilele aplicației, cum ar fi parolele, etc.
Schimbările la variabile sunt supuse autentificării cu parolă din motive de securitate.
Note Suplimentare:
Asigurați-vă că toate câmpurile obligatorii sunt completate înainte de a efectua acțiuni precum căutare, inserare, etc.
Aveți grijă atunci când editați sau ștergeți înregistrări, deoarece modificările sunt permanente.</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>44</value>
  </metadata>
</root>